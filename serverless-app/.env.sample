# ENVIRONMENT VARIABLES FOR AWS, REACT, TERRAFORM
# Environment variables are used to provide secret keys or other data that are specific to an app.
# Terraform provides the means to load environment variables
# For this, any ENV variable name needs to start with TF_VAR_
# in the terraform file, the variable name is referenced WITHOUT TF_VAR_ 
# EXAMPLE: 
# 1.) env variable: TF_VAR_s3_bucket_name=mys3Bucket 
# 2.) in variable.tf file: variable "s3_bucket_name" {type = "string"}

# NOTE: AWS_REGION and other environment variables are Predefined in AWS!
# https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html 

# NOTE: It should not be necessary to define the client and secret key for your AWS here
# rather, use the 'aws configure' command line interface (CLI) to store them into environment Variables
# Terraform will pick up these values when you run init, plan, apply...

# Variables used both by Lambda functions and Terraform code
TF_VAR_s3_media_bucket_name=mymediabucket
TF_VAR_dynamodb_name=mydynamodb
TF_VAR_s3_web_bucket_name=mywebappbucket


# For environment variables used in REACT we need to follow a different strategy
# Here the environment variables start with REACT_APP_ 
# And they are being resolved at the time of building the app.

# Variables only for the React app
REACT_APP_BACKEND_URL=http://localhost:5000/api/
REACT_APP_LOCAL_STORAGE_ID=userData
REACT_APP_COGNITO_USERPOOL_ID=eu-west-2_0GiEcPl15
REACT_APP_COGNITO_CLIENT_ID=51hoi56serlaalhsosl8r4em5n

